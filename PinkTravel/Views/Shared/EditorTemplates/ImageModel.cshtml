@model PinkTravel.Models.ImageModel
@using ClientDependency.Core.Mvc
@{
	Html.RequiresJsFolder("~/Scripts/jquery").RequiresJsFolder("~/Scripts/jquery-ui");
	Html.RequiresJs("~/Scripts/file-upload/jquery.fileupload.js").RequiresJs("~/Scripts/file-upload/jquery.fileupload-process.js");
	Html.RequiresJsFolder("~/Scripts/file-upload").RequiresJs("~/Scripts/jquery.jcrop.min.js");
	Html.RequiresCss("~/Content/jcrop/jquery.jcrop.min.css");
	Html.RequiresJs("~/Scripts/imagemodel.js");
}
<style>
	.jcrop-holder {
		display: none;
	}
</style>
<script type="text/javascript">
	 @{
			<text>
	$(document).ready(function () {
		var cropInputId = "#" + "@ViewData.TemplateInfo.GetFullHtmlFieldId("crop")";
		var imageUploadId = "#" + "@ViewData.TemplateInfo.GetFullHtmlFieldId("imageUpload")";
		var imagePreviewId = "#" + "@ViewData.TemplateInfo.GetFullHtmlFieldId("imagePreview")";
		var jcrop_api = undefined;

		function getPostFormSettings()
		{
			return {
				CropX1: $("#@Html.IdFor(model => model.CropX1)").val(),
				CropX2: $("#@Html.IdFor(model => model.CropX2)").val(),
				CropY1: $("#@Html.IdFor(model => model.CropY1)").val(),
				CropY2: $("#@Html.IdFor(model => model.CropY2)").val()
			};
		};

		var imageSetting = {
			ratio: parseFloat(@ViewData["imageRatio"]),
			width: parseInt(@ViewData["minWidth"]),
			x1Id: "#@Html.IdFor(model => model.CropX1)",
			x2Id: "#@Html.IdFor(model => model.CropX2)",
			y1Id: "#@Html.IdFor(model => model.CropY1)",
			y2Id: "#@Html.IdFor(model => model.CropY2)"
		};

		var buttonSettings = {
			processingText: "Processing",
			uploadText: "Upload",
			abortText: "Abort",
			formData: getPostFormSettings
		};

		var imageUploadDetails = {
			url: "@Url.Action("UploadImage", "PImages")",
			uploadButton: getUploadButton(buttonSettings),
			doneCallBack: imageUploaded,
			progressId: "#@ViewData.TemplateInfo.GetFullHtmlFieldId("progress")",
		   	failedCallBack: function () { alert('fail'); }
		};

		function imageUploaded(files) {
			"use strict";
			$(imageUploadId).animate({
				opacity: 0,
				height: 0
			}, 1000);
			$(jcrop_api.ui.holder).animate({
				opacity: 0,
				height: 0
			}, 1000);
			setTimeout(function () {
				jcrop_api.destroy();
				$(imagePreviewId).hide();
			}, "1000");

			$("#@Html.IdFor(model => model.ContentType)").val(files[0].type);
			$("#@Html.IdFor(model => model.FullImageSize)").val(files[0].size);
			$("#@Html.IdFor(model => model.FullImageName)").val(files[0].name);
			$("#@Html.IdFor(model => model.CroppedImageName)").val(files[0].cropped_image_name);
			$("#@Html.IdFor(model => model.CroppedImageSize)").val(files[0].cropped_image_size);
		}

		setupImageUpload(imageUploadId, imageUploadDetails);

		$(imageUploadId).change(function () {
			readUrl(this, imagePreviewId);
		});

		$(imagePreviewId).load(function () { jcrop_api = setJCrop(this, imageSetting, jcrop_api); });

		$(".btn-primary").on('click', function () { return false; });
	});
	</text>
	}
</script>
<div class="imageModel" id="@ViewData.TemplateInfo.GetFullHtmlFieldId("container")" style="width: 600px">
	@Html.HiddenFor(model => model.CropX2)
	@Html.HiddenFor(model => model.CropX1)
	@Html.HiddenFor(model => model.CropY1)
	@Html.HiddenFor(model => model.CropY2)
	@Html.HiddenFor(model => model.FullImageName)
	@Html.HiddenFor(model => model.FullImageSize)
	@Html.HiddenFor(model => model.CroppedImageName)
	@Html.HiddenFor(model => model.CroppedImageSize)
	@Html.HiddenFor(model => model.ContentType)
	@Html.ValidationMessageFor(model => model.FullImageName)

	<input type="file" name="@ViewData.TemplateInfo.GetFullHtmlFieldName("imageUpload")" id="@ViewData.TemplateInfo.GetFullHtmlFieldId("imageUpload")" />
	@if (Model != null && !string.IsNullOrEmpty(Model.FullImageName) && ViewData["offerId"] != null && ((int)ViewData["offerId"] > 0))
	{
		<img id="@ViewData.TemplateInfo.GetFullHtmlFieldId("imagePreview")" style="" src="@Url.Action("Image", "PImages", new { name = Model.FullImageName, offer = ViewData["offerId"] })" />
	}
	else
	{
		<img id="@ViewData.TemplateInfo.GetFullHtmlFieldId("imagePreview")" style="display: none; width: 0; height: 0" />
	}

	<div id="@ViewData.TemplateInfo.GetFullHtmlFieldId("progress")" class="progress" style="width: 300px">
		<div class="progress-bar progress-bar-success"></div>
	</div>
	<div />
</div>

